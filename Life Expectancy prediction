{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5ba2d450",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-03-24T20:47:58.440099Z",
     "iopub.status.busy": "2025-03-24T20:47:58.439658Z",
     "iopub.status.idle": "2025-03-24T20:47:59.448000Z",
     "shell.execute_reply": "2025-03-24T20:47:59.446622Z"
    },
    "papermill": {
     "duration": 1.015831,
     "end_time": "2025-03-24T20:47:59.449919",
     "exception": false,
     "start_time": "2025-03-24T20:47:58.434088",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/life-expectancy-who-updated/Life-Expectancy-Data-Updated.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1eb346b9",
   "metadata": {
    "papermill": {
     "duration": 0.00351,
     "end_time": "2025-03-24T20:47:59.457593",
     "exception": false,
     "start_time": "2025-03-24T20:47:59.454083",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Life Expecatancy prediction**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a77ad19",
   "metadata": {
    "papermill": {
     "duration": 0.003431,
     "end_time": "2025-03-24T20:47:59.464909",
     "exception": false,
     "start_time": "2025-03-24T20:47:59.461478",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Data loading and Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "76275786",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:47:59.474050Z",
     "iopub.status.busy": "2025-03-24T20:47:59.473459Z",
     "iopub.status.idle": "2025-03-24T20:48:01.296125Z",
     "shell.execute_reply": "2025-03-24T20:48:01.295003Z"
    },
    "papermill": {
     "duration": 1.829532,
     "end_time": "2025-03-24T20:48:01.298123",
     "exception": false,
     "start_time": "2025-03-24T20:47:59.468591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cadc27fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.308535Z",
     "iopub.status.busy": "2025-03-24T20:48:01.307981Z",
     "iopub.status.idle": "2025-03-24T20:48:01.385299Z",
     "shell.execute_reply": "2025-03-24T20:48:01.384195Z"
    },
    "papermill": {
     "duration": 0.084631,
     "end_time": "2025-03-24T20:48:01.387105",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.302474",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Year</th>\n",
       "      <th>Infant_deaths</th>\n",
       "      <th>Under_five_deaths</th>\n",
       "      <th>Adult_mortality</th>\n",
       "      <th>Alcohol_consumption</th>\n",
       "      <th>Hepatitis_B</th>\n",
       "      <th>Measles</th>\n",
       "      <th>BMI</th>\n",
       "      <th>...</th>\n",
       "      <th>Diphtheria</th>\n",
       "      <th>Incidents_HIV</th>\n",
       "      <th>GDP_per_capita</th>\n",
       "      <th>Population_mln</th>\n",
       "      <th>Thinness_ten_nineteen_years</th>\n",
       "      <th>Thinness_five_nine_years</th>\n",
       "      <th>Schooling</th>\n",
       "      <th>Economy_status_Developed</th>\n",
       "      <th>Economy_status_Developing</th>\n",
       "      <th>Life_expectancy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Turkiye</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>2015</td>\n",
       "      <td>11.1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>105.8240</td>\n",
       "      <td>1.32</td>\n",
       "      <td>97</td>\n",
       "      <td>65</td>\n",
       "      <td>27.8</td>\n",
       "      <td>...</td>\n",
       "      <td>97</td>\n",
       "      <td>0.08</td>\n",
       "      <td>11006</td>\n",
       "      <td>78.53</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>76.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spain</td>\n",
       "      <td>European Union</td>\n",
       "      <td>2015</td>\n",
       "      <td>2.7</td>\n",
       "      <td>3.3</td>\n",
       "      <td>57.9025</td>\n",
       "      <td>10.35</td>\n",
       "      <td>97</td>\n",
       "      <td>94</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>97</td>\n",
       "      <td>0.09</td>\n",
       "      <td>25742</td>\n",
       "      <td>46.44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.5</td>\n",
       "      <td>9.7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>82.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>India</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2007</td>\n",
       "      <td>51.5</td>\n",
       "      <td>67.9</td>\n",
       "      <td>201.0765</td>\n",
       "      <td>1.57</td>\n",
       "      <td>60</td>\n",
       "      <td>35</td>\n",
       "      <td>21.2</td>\n",
       "      <td>...</td>\n",
       "      <td>64</td>\n",
       "      <td>0.13</td>\n",
       "      <td>1076</td>\n",
       "      <td>1183.21</td>\n",
       "      <td>27.1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>65.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Guyana</td>\n",
       "      <td>South America</td>\n",
       "      <td>2006</td>\n",
       "      <td>32.8</td>\n",
       "      <td>40.5</td>\n",
       "      <td>222.1965</td>\n",
       "      <td>5.68</td>\n",
       "      <td>93</td>\n",
       "      <td>74</td>\n",
       "      <td>25.3</td>\n",
       "      <td>...</td>\n",
       "      <td>93</td>\n",
       "      <td>0.79</td>\n",
       "      <td>4146</td>\n",
       "      <td>0.75</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Israel</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>2012</td>\n",
       "      <td>3.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>57.9510</td>\n",
       "      <td>2.89</td>\n",
       "      <td>97</td>\n",
       "      <td>89</td>\n",
       "      <td>27.0</td>\n",
       "      <td>...</td>\n",
       "      <td>94</td>\n",
       "      <td>0.08</td>\n",
       "      <td>33995</td>\n",
       "      <td>7.91</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.1</td>\n",
       "      <td>12.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>81.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Country          Region  Year  Infant_deaths  Under_five_deaths  \\\n",
       "0  Turkiye     Middle East  2015           11.1               13.0   \n",
       "1    Spain  European Union  2015            2.7                3.3   \n",
       "2    India            Asia  2007           51.5               67.9   \n",
       "3   Guyana   South America  2006           32.8               40.5   \n",
       "4   Israel     Middle East  2012            3.4                4.3   \n",
       "\n",
       "   Adult_mortality  Alcohol_consumption  Hepatitis_B  Measles   BMI  ...  \\\n",
       "0         105.8240                 1.32           97       65  27.8  ...   \n",
       "1          57.9025                10.35           97       94  26.0  ...   \n",
       "2         201.0765                 1.57           60       35  21.2  ...   \n",
       "3         222.1965                 5.68           93       74  25.3  ...   \n",
       "4          57.9510                 2.89           97       89  27.0  ...   \n",
       "\n",
       "   Diphtheria  Incidents_HIV  GDP_per_capita  Population_mln  \\\n",
       "0          97           0.08           11006           78.53   \n",
       "1          97           0.09           25742           46.44   \n",
       "2          64           0.13            1076         1183.21   \n",
       "3          93           0.79            4146            0.75   \n",
       "4          94           0.08           33995            7.91   \n",
       "\n",
       "   Thinness_ten_nineteen_years  Thinness_five_nine_years  Schooling  \\\n",
       "0                          4.9                       4.8        7.8   \n",
       "1                          0.6                       0.5        9.7   \n",
       "2                         27.1                      28.0        5.0   \n",
       "3                          5.7                       5.5        7.9   \n",
       "4                          1.2                       1.1       12.8   \n",
       "\n",
       "   Economy_status_Developed  Economy_status_Developing  Life_expectancy  \n",
       "0                         0                          1             76.5  \n",
       "1                         1                          0             82.8  \n",
       "2                         0                          1             65.4  \n",
       "3                         0                          1             67.0  \n",
       "4                         1                          0             81.7  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(\"/kaggle/input/life-expectancy-who-updated/Life-Expectancy-Data-Updated.csv\")\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae8a76b8",
   "metadata": {
    "papermill": {
     "duration": 0.003885,
     "end_time": "2025-03-24T20:48:01.395468",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.391583",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Basic dataset information "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "29cf24a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.405205Z",
     "iopub.status.busy": "2025-03-24T20:48:01.404843Z",
     "iopub.status.idle": "2025-03-24T20:48:01.414014Z",
     "shell.execute_reply": "2025-03-24T20:48:01.412767Z"
    },
    "papermill": {
     "duration": 0.016204,
     "end_time": "2025-03-24T20:48:01.415967",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.399763",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset Overview:\n",
      "-----------------\n",
      "Total number of rows: 2864\n",
      "Total number of columns: 21\n",
      "\n",
      "Column Types:\n",
      "Country                         object\n",
      "Region                          object\n",
      "Year                             int64\n",
      "Infant_deaths                  float64\n",
      "Under_five_deaths              float64\n",
      "Adult_mortality                float64\n",
      "Alcohol_consumption            float64\n",
      "Hepatitis_B                      int64\n",
      "Measles                          int64\n",
      "BMI                            float64\n",
      "Polio                            int64\n",
      "Diphtheria                       int64\n",
      "Incidents_HIV                  float64\n",
      "GDP_per_capita                   int64\n",
      "Population_mln                 float64\n",
      "Thinness_ten_nineteen_years    float64\n",
      "Thinness_five_nine_years       float64\n",
      "Schooling                      float64\n",
      "Economy_status_Developed         int64\n",
      "Economy_status_Developing        int64\n",
      "Life_expectancy                float64\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "    print(\"Dataset Overview:\")\n",
    "    print(\"-----------------\")\n",
    "    print(f\"Total number of rows: {data.shape[0]}\")\n",
    "    print(f\"Total number of columns: {data.shape[1]}\")\n",
    "    print(\"\\nColumn Types:\")\n",
    "    print(data.dtypes)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8248f099",
   "metadata": {
    "papermill": {
     "duration": 0.004139,
     "end_time": "2025-03-24T20:48:01.424689",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.420550",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "checking for null values "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e583e299",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.435172Z",
     "iopub.status.busy": "2025-03-24T20:48:01.434809Z",
     "iopub.status.idle": "2025-03-24T20:48:01.458660Z",
     "shell.execute_reply": "2025-03-24T20:48:01.457078Z"
    },
    "papermill": {
     "duration": 0.031049,
     "end_time": "2025-03-24T20:48:01.460491",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.429442",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2864 entries, 0 to 2863\n",
      "Data columns (total 21 columns):\n",
      " #   Column                       Non-Null Count  Dtype  \n",
      "---  ------                       --------------  -----  \n",
      " 0   Country                      2864 non-null   object \n",
      " 1   Region                       2864 non-null   object \n",
      " 2   Year                         2864 non-null   int64  \n",
      " 3   Infant_deaths                2864 non-null   float64\n",
      " 4   Under_five_deaths            2864 non-null   float64\n",
      " 5   Adult_mortality              2864 non-null   float64\n",
      " 6   Alcohol_consumption          2864 non-null   float64\n",
      " 7   Hepatitis_B                  2864 non-null   int64  \n",
      " 8   Measles                      2864 non-null   int64  \n",
      " 9   BMI                          2864 non-null   float64\n",
      " 10  Polio                        2864 non-null   int64  \n",
      " 11  Diphtheria                   2864 non-null   int64  \n",
      " 12  Incidents_HIV                2864 non-null   float64\n",
      " 13  GDP_per_capita               2864 non-null   int64  \n",
      " 14  Population_mln               2864 non-null   float64\n",
      " 15  Thinness_ten_nineteen_years  2864 non-null   float64\n",
      " 16  Thinness_five_nine_years     2864 non-null   float64\n",
      " 17  Schooling                    2864 non-null   float64\n",
      " 18  Economy_status_Developed     2864 non-null   int64  \n",
      " 19  Economy_status_Developing    2864 non-null   int64  \n",
      " 20  Life_expectancy              2864 non-null   float64\n",
      "dtypes: float64(11), int64(8), object(2)\n",
      "memory usage: 470.0+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a15a1430",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.470770Z",
     "iopub.status.busy": "2025-03-24T20:48:01.470355Z",
     "iopub.status.idle": "2025-03-24T20:48:01.525866Z",
     "shell.execute_reply": "2025-03-24T20:48:01.524640Z"
    },
    "papermill": {
     "duration": 0.062964,
     "end_time": "2025-03-24T20:48:01.527998",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.465034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Infant_deaths</th>\n",
       "      <th>Under_five_deaths</th>\n",
       "      <th>Adult_mortality</th>\n",
       "      <th>Alcohol_consumption</th>\n",
       "      <th>Hepatitis_B</th>\n",
       "      <th>Measles</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Polio</th>\n",
       "      <th>Diphtheria</th>\n",
       "      <th>Incidents_HIV</th>\n",
       "      <th>GDP_per_capita</th>\n",
       "      <th>Population_mln</th>\n",
       "      <th>Thinness_ten_nineteen_years</th>\n",
       "      <th>Thinness_five_nine_years</th>\n",
       "      <th>Schooling</th>\n",
       "      <th>Economy_status_Developed</th>\n",
       "      <th>Economy_status_Developing</th>\n",
       "      <th>Life_expectancy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "      <td>2864.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2007.500000</td>\n",
       "      <td>30.363792</td>\n",
       "      <td>42.938268</td>\n",
       "      <td>192.251775</td>\n",
       "      <td>4.820882</td>\n",
       "      <td>84.292598</td>\n",
       "      <td>77.344972</td>\n",
       "      <td>25.032926</td>\n",
       "      <td>86.499651</td>\n",
       "      <td>86.271648</td>\n",
       "      <td>0.894288</td>\n",
       "      <td>11540.924930</td>\n",
       "      <td>36.675915</td>\n",
       "      <td>4.865852</td>\n",
       "      <td>4.899825</td>\n",
       "      <td>7.632123</td>\n",
       "      <td>0.206704</td>\n",
       "      <td>0.793296</td>\n",
       "      <td>68.856075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.610577</td>\n",
       "      <td>27.538117</td>\n",
       "      <td>44.569974</td>\n",
       "      <td>114.910281</td>\n",
       "      <td>3.981949</td>\n",
       "      <td>15.995511</td>\n",
       "      <td>18.659693</td>\n",
       "      <td>2.193905</td>\n",
       "      <td>15.080365</td>\n",
       "      <td>15.534225</td>\n",
       "      <td>2.381389</td>\n",
       "      <td>16934.788931</td>\n",
       "      <td>136.485867</td>\n",
       "      <td>4.438234</td>\n",
       "      <td>4.525217</td>\n",
       "      <td>3.171556</td>\n",
       "      <td>0.405012</td>\n",
       "      <td>0.405012</td>\n",
       "      <td>9.405608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2000.000000</td>\n",
       "      <td>1.800000</td>\n",
       "      <td>2.300000</td>\n",
       "      <td>49.384000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>19.800000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>148.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>39.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2003.750000</td>\n",
       "      <td>8.100000</td>\n",
       "      <td>9.675000</td>\n",
       "      <td>106.910250</td>\n",
       "      <td>1.200000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>23.200000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>1415.750000</td>\n",
       "      <td>2.097500</td>\n",
       "      <td>1.600000</td>\n",
       "      <td>1.600000</td>\n",
       "      <td>5.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>62.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2007.500000</td>\n",
       "      <td>19.600000</td>\n",
       "      <td>23.100000</td>\n",
       "      <td>163.841500</td>\n",
       "      <td>4.020000</td>\n",
       "      <td>89.000000</td>\n",
       "      <td>83.000000</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>0.150000</td>\n",
       "      <td>4217.000000</td>\n",
       "      <td>7.850000</td>\n",
       "      <td>3.300000</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>71.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2011.250000</td>\n",
       "      <td>47.350000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>246.791375</td>\n",
       "      <td>7.777500</td>\n",
       "      <td>96.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>26.400000</td>\n",
       "      <td>97.000000</td>\n",
       "      <td>97.000000</td>\n",
       "      <td>0.460000</td>\n",
       "      <td>12557.000000</td>\n",
       "      <td>23.687500</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>7.300000</td>\n",
       "      <td>10.300000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>75.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2015.000000</td>\n",
       "      <td>138.100000</td>\n",
       "      <td>224.900000</td>\n",
       "      <td>719.360500</td>\n",
       "      <td>17.870000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>21.680000</td>\n",
       "      <td>112418.000000</td>\n",
       "      <td>1379.860000</td>\n",
       "      <td>27.700000</td>\n",
       "      <td>28.600000</td>\n",
       "      <td>14.100000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>83.800000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Year  Infant_deaths  Under_five_deaths  Adult_mortality  \\\n",
       "count  2864.000000    2864.000000        2864.000000      2864.000000   \n",
       "mean   2007.500000      30.363792          42.938268       192.251775   \n",
       "std       4.610577      27.538117          44.569974       114.910281   \n",
       "min    2000.000000       1.800000           2.300000        49.384000   \n",
       "25%    2003.750000       8.100000           9.675000       106.910250   \n",
       "50%    2007.500000      19.600000          23.100000       163.841500   \n",
       "75%    2011.250000      47.350000          66.000000       246.791375   \n",
       "max    2015.000000     138.100000         224.900000       719.360500   \n",
       "\n",
       "       Alcohol_consumption  Hepatitis_B      Measles          BMI  \\\n",
       "count          2864.000000  2864.000000  2864.000000  2864.000000   \n",
       "mean              4.820882    84.292598    77.344972    25.032926   \n",
       "std               3.981949    15.995511    18.659693     2.193905   \n",
       "min               0.000000    12.000000    10.000000    19.800000   \n",
       "25%               1.200000    78.000000    64.000000    23.200000   \n",
       "50%               4.020000    89.000000    83.000000    25.500000   \n",
       "75%               7.777500    96.000000    93.000000    26.400000   \n",
       "max              17.870000    99.000000    99.000000    32.100000   \n",
       "\n",
       "             Polio   Diphtheria  Incidents_HIV  GDP_per_capita  \\\n",
       "count  2864.000000  2864.000000    2864.000000     2864.000000   \n",
       "mean     86.499651    86.271648       0.894288    11540.924930   \n",
       "std      15.080365    15.534225       2.381389    16934.788931   \n",
       "min       8.000000    16.000000       0.010000      148.000000   \n",
       "25%      81.000000    81.000000       0.080000     1415.750000   \n",
       "50%      93.000000    93.000000       0.150000     4217.000000   \n",
       "75%      97.000000    97.000000       0.460000    12557.000000   \n",
       "max      99.000000    99.000000      21.680000   112418.000000   \n",
       "\n",
       "       Population_mln  Thinness_ten_nineteen_years  Thinness_five_nine_years  \\\n",
       "count     2864.000000                  2864.000000               2864.000000   \n",
       "mean        36.675915                     4.865852                  4.899825   \n",
       "std        136.485867                     4.438234                  4.525217   \n",
       "min          0.080000                     0.100000                  0.100000   \n",
       "25%          2.097500                     1.600000                  1.600000   \n",
       "50%          7.850000                     3.300000                  3.400000   \n",
       "75%         23.687500                     7.200000                  7.300000   \n",
       "max       1379.860000                    27.700000                 28.600000   \n",
       "\n",
       "         Schooling  Economy_status_Developed  Economy_status_Developing  \\\n",
       "count  2864.000000               2864.000000                2864.000000   \n",
       "mean      7.632123                  0.206704                   0.793296   \n",
       "std       3.171556                  0.405012                   0.405012   \n",
       "min       1.100000                  0.000000                   0.000000   \n",
       "25%       5.100000                  0.000000                   1.000000   \n",
       "50%       7.800000                  0.000000                   1.000000   \n",
       "75%      10.300000                  0.000000                   1.000000   \n",
       "max      14.100000                  1.000000                   1.000000   \n",
       "\n",
       "       Life_expectancy  \n",
       "count      2864.000000  \n",
       "mean         68.856075  \n",
       "std           9.405608  \n",
       "min          39.400000  \n",
       "25%          62.700000  \n",
       "50%          71.400000  \n",
       "75%          75.400000  \n",
       "max          83.800000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "    data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51709eda",
   "metadata": {
    "papermill": {
     "duration": 0.004578,
     "end_time": "2025-03-24T20:48:01.537718",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.533140",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### lets change names of some columns for easy interpreation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e8747df1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.548486Z",
     "iopub.status.busy": "2025-03-24T20:48:01.548078Z",
     "iopub.status.idle": "2025-03-24T20:48:01.553280Z",
     "shell.execute_reply": "2025-03-24T20:48:01.552113Z"
    },
    "papermill": {
     "duration": 0.012784,
     "end_time": "2025-03-24T20:48:01.555234",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.542450",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data.rename(columns={'Economy_status_Developed': 'Developed',\n",
    "                  'Economy_status_Developing': 'Developing'},\n",
    "          inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d5cad7f",
   "metadata": {
    "papermill": {
     "duration": 0.00434,
     "end_time": "2025-03-24T20:48:01.564450",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.560110",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "1. life expectancy by developed and developing status"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "07fa04b3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:01.575063Z",
     "iopub.status.busy": "2025-03-24T20:48:01.574649Z",
     "iopub.status.idle": "2025-03-24T20:48:02.511304Z",
     "shell.execute_reply": "2025-03-24T20:48:02.509826Z"
    },
    "papermill": {
     "duration": 0.944667,
     "end_time": "2025-03-24T20:48:02.513737",
     "exception": false,
     "start_time": "2025-03-24T20:48:01.569070",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  data_subset = grouped_data.get_group(pd_key)\n",
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  data_subset = grouped_data.get_group(pd_key)\n",
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  data_subset = grouped_data.get_group(pd_key)\n",
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  data_subset = grouped_data.get_group(pd_key)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Developed_label'] = data['Developed'].map({0:'Developing', 1: 'Developed'})\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.histplot(\n",
    "    data=data, \n",
    "    x=\"Life_expectancy\", \n",
    "    hue=\"Developed_label\",\n",
    "    bins=30, \n",
    "    palette=\"muted\", \n",
    "    multiple=\"stack\",   # Stack the bars instead of dodging them\n",
    "    stat=\"count\"        # Show the total count for each bin\n",
    ")\n",
    "plt.title(\"Stacked Histogram of Life Expectancy by Developed Status\")\n",
    "plt.xlabel(\"Life Expectancy\")\n",
    "plt.ylabel(\"Count\")\n",
    "plt.savefig('Stacked_Hist_of_Life_exp_by_Developed.png', dpi=300)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcee51f4",
   "metadata": {
    "papermill": {
     "duration": 0.005532,
     "end_time": "2025-03-24T20:48:02.526314",
     "exception": false,
     "start_time": "2025-03-24T20:48:02.520782",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In the graph the developing countries shows broader range of life expectancy with high varience where as developed coutries show less varient and high median life expectancy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b31bf1b6",
   "metadata": {
    "papermill": {
     "duration": 0.005313,
     "end_time": "2025-03-24T20:48:02.537909",
     "exception": false,
     "start_time": "2025-03-24T20:48:02.532596",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "2. life Expectancy with region wise"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6c5ca012",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-24T20:48:02.550388Z",
     "iopub.status.busy": "2025-03-24T20:48:02.550037Z",
     "iopub.status.idle": "2025-03-24T20:48:02.966718Z",
     "shell.execute_reply": "2025-03-24T20:48:02.965445Z"
    },
    "papermill": {
     "duration": 0.424952,
     "end_time": "2025-03-24T20:48:02.968438",
     "exception": false,
     "start_time": "2025-03-24T20:48:02.543486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA+QAAAIjCAYAAACKx9GpAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB+lklEQVR4nO3dd3gUVdvH8d9u2m4gCZ2AQBKKVJEmEFEBQYqIQRGQoiBYHkSa2LAhKCI27AVEQAEbqFgxgPWhg9Ih1ASQIiAQSgIhOe8fPNk3SzYNNplN8v1c115XMjN79t6Z2Zm555w5x2aMMQIAAAAAAAXKbnUAAAAAAAAURyTkAAAAAABYgIQcAAAAAAALkJADAAAAAGABEnIAAAAAACxAQg4AAAAAgAVIyAEAAAAAsAAJOQAAAAAAFiAhBwAAAADAAiTkAFAExMfHy2azafr06W7T58+fr0aNGsnhcMhms+nYsWOWxAff06ZNG7Vp06ZAPstms+mZZ55x/f/MM8/IZrPp8OHDBfL5kZGRGjBgQIF8VkYF/T2tkNWxBwCQOyTkAODjpk+fLpvNplWrVuXpfUeOHFHPnj3ldDr19ttv6+OPP1aJEiUuKZb0i++sXi+88MIllV9QTp8+rWeeeUa//vqr1aF4xYABA9y2Q8mSJVW9enXddtttmjt3rtLS0rzyOUuWLNEzzzzjkzd2fDm2/NamTRu37e90OtWwYUO99tprXtv2AID84W91AACASxcREaGkpCQFBAS4pq1cuVInTpzQs88+q/bt23v183r37q0bb7wx0/TGjRt79XPyy+nTpzV27FhJKrBa4vwWFBSkDz74QJKUlJSkhIQEffvtt7rtttvUpk0bzZs3T6Ghoa7lY2Nj8/wZS5Ys0dixYzVgwACVKlUq1+9LSkqSv3/+XnJkF1tcXJzs9qJdB1GlShVNmDBBknT48GHNnj1bI0eO1KFDhzR+/Ph8+1xPxx4AQO6RkANAEWCz2eRwONym/fPPP5KUp8Qpt5o0aaJ+/fp5vVxcPH9//0zb5LnnntMLL7yg0aNH65577tFnn33mmhcYGJiv8aSlpens2bNyOByZ9s2CFhQUZOnnF4SwsDC37f+f//xHderU0Ztvvqlx48bJz88vXz7X07EHAJB7Rft2MQAUExc+x9mmTRv1799fknTVVVfJZrO5PUO7fPlyderUSWFhYQoODlbr1q21ePFir8Xz888/y2636+mnn3abPnv2bNlsNr377ruuaTabTQ888IBmzZql2rVry+FwqGnTpvr9998zlfv3339r4MCBqlixooKCglS/fn19+OGHmZZLTk7WM888o8svv1wOh0OVKlXSrbfeqh07dig+Pl7ly5eXJI0dO9bVzDf9Ged169ZpwIABql69uhwOh8LDwzVw4EAdOXLE7TPSnw/evn27q1Y2LCxMd911l06fPp0pppkzZ6p58+YKDg5W6dKldd1117lqqfv3769y5copJSUl0/s6dOig2rVr57DGs/bYY4+pQ4cO+uKLL7R161bXdE/PkL/55puqX7++K8ZmzZpp9uzZru/78MMPS5KioqJc6y0+Pl6S+3asX7++goKCNH/+fNe8jM+Qpzt8+LB69uyp0NBQlS1bVsOHD1dycrJrfnbPJ2csM6fYPD1DvnPnTvXo0UNlypRRcHCwWrZsqe+//95tmV9//VU2m02ff/65xo8frypVqsjhcKhdu3bavn17lus8r9+zdevWuvLKKz2+t3bt2urYsWOuPyudw+HQVVddpRMnTrhuzqWbOXOmmjZtKqfTqTJlyuj222/Xnj17MpXx9ttvq3r16nI6nWrevLn++OOPTPtNVtvo559/1rXXXqsSJUqoVKlSiomJ0ebNm92WyetvCACKImrIAaAIeuKJJ1S7dm1NnjxZ48aNU1RUlGrUqCHp/IVy586d1bRpU40ZM0Z2u13Tpk3T9ddfrz/++EPNmzfPsfzTp0977KiqVKlS8vf31/XXX6/7779fEyZMULdu3dSkSRPt379fQ4cOVfv27fWf//zH7X2//fabPvvsMw0bNkxBQUF655131KlTJ61YsUINGjSQJB08eFAtW7Z0JX7ly5fXjz/+qEGDBikxMVEjRoyQJKWmpuqmm27SokWLdPvtt2v48OE6ceKEFixYoA0bNqh9+/Z69913NXjwYN1yyy269dZbJUkNGzaUJC1YsEA7d+7UXXfdpfDwcG3cuFGTJ0/Wxo0btWzZMtlsNrfYe/bsqaioKE2YMEF//vmnPvjgA1WoUEETJ050LTN27Fg988wzuvrqqzVu3DgFBgZq+fLl+vnnn9WhQwfdcccd+uijj/TTTz/ppptucr3vwIED+vnnnzVmzJgct0l27rjjDsXGxmrBggW6/PLLPS4zZcoUDRs2TLfddpsrYVy3bp2WL1+uPn366NZbb9XWrVv1ySefaNKkSSpXrpwkuW5uSOf3rc8//1wPPPCAypUrp8jIyGzj6tmzpyIjIzVhwgQtW7ZMb7zxho4ePaqPPvooT98vN7FldPDgQV199dU6ffq0hg0bprJly2rGjBm6+eabNWfOHN1yyy1uy7/wwguy2+166KGHdPz4cb344ovq27evli9fnqv4cvqed9xxh+655x5t2LDBtb9L5x872bp1q5588sk8rY906clyxlYy48eP11NPPaWePXvq7rvv1qFDh/Tmm2/quuuu019//eVa9t1339UDDzyga6+9ViNHjlR8fLy6deum0qVLq0qVKtl+7sKFC9W5c2dVr15dzzzzjJKSkvTmm2+qVatW+vPPPzPtF7n5DQFAkWUAAD5t2rRpRpJZuXJllsvs2rXLSDLTpk3L9n1paWmmVq1apmPHjiYtLc01/fTp0yYqKsrccMMN2caS/jlZvZYuXepa9tSpU6ZmzZqmfv36Jjk52XTp0sWEhoaahIQEtzLT37tq1SrXtISEBONwOMwtt9zimjZo0CBTqVIlc/jwYbf333777SYsLMycPn3aGGPMhx9+aCSZV199NVP86d/50KFDRpIZM2ZMpmXSy8nok08+MZLM77//7po2ZswYI8kMHDjQbdlbbrnFlC1b1vX/tm3bjN1uN7fccotJTU31GE9qaqqpUqWK6dWrl9v8V1991dhsNrNz585MMWXUv39/U6JEiSzn//XXX0aSGTlypGta69atTevWrV3/x8TEmPr162f7OS+99JKRZHbt2pVpniRjt9vNxo0bPc7LuK7T193NN9/sttz9999vJJm1a9caYzzv11mVmV1sERERpn///q7/R4wYYSSZP/74wzXtxIkTJioqykRGRrq20y+//GIkmbp165ozZ864ln399deNJLN+/fpMn5VRbr/nsWPHjMPhMI8++qjbcsOGDTMlSpQwJ0+ezPZzWrduberUqWMOHTpkDh06ZLZs2WIefvhhI8l06dLFtVx8fLzx8/Mz48ePd3v/+vXrjb+/v2v6mTNnTNmyZc1VV11lUlJSXMtNnz7dSHLbbzxto0aNGpkKFSqYI0eOuKatXbvW2O12c+edd2ZaPzn9hgCgKKPJOgAUI2vWrNG2bdvUp08fHTlyRIcPH9bhw4d16tQptWvXTr///nuuemW+9957tWDBgkyvevXquZYJDg7W9OnTtXnzZl133XX6/vvvNWnSJFWrVi1TedHR0WratKnr/2rVqikmJkY//fSTUlNTZYzR3Llz1bVrVxljXHEfPnxYHTt21PHjx/Xnn39KkubOnaty5cpp6NChmT7nwtptT5xOp+vv5ORkHT58WC1btpQk12dkdGFt/7XXXqsjR44oMTFRkvT1118rLS1NTz/9dKaOxdLjsdvt6tu3r7755hudOHHCNX/WrFm6+uqrFRUVlWPc2SlZsqQkuZV9oVKlSmnv3r1auXLlRX9O69at3faBnAwZMsTt//Rt9sMPP1x0DLnxww8/qHnz5rrmmmtc00qWLKl7771X8fHx2rRpk9vyd911l9sz99dee62k883ecyOn7xkWFqaYmBh98sknMsZIOt/S47PPPlO3bt1yNTrCli1bVL58eZUvX1516tTRSy+9pJtvvtmtKfmXX36ptLQ09ezZ0+03FB4erlq1aumXX36RJK1atUpHjhzRPffc49YZX9++fVW6dOls49i/f7/WrFmjAQMGqEyZMq7pDRs21A033OBx2+b0GwKAoowm6wBQjGzbtk2SXM+Xe3L8+PEcL7pr1aqVq57bW7VqpcGDB+vtt99Wx44dNXDgwCzLu9Dll1+u06dP69ChQ7Lb7Tp27JgmT56syZMneywj/TnZHTt2qHbt2hfdq/e///6rsWPH6tNPP8307O3x48czLX/hDYb0dXf06FGFhoZqx44dstvtOSaqd955pyZOnKivvvpKd955p+Li4rR69Wq99957F/U9Mjp58qQkKSQkJMtlHn30US1cuFDNmzdXzZo11aFDB/Xp00etWrXK9efk9cbBhdu9Ro0astvtrme/80tCQoJatGiRaXrdunVd8zM2Hc9uG+dGbr7nnXfeqc8++0x//PGHrrvuOi1cuFAHDx7UHXfckavPiIyM1JQpU5SWlqYdO3Zo/PjxOnTokFuHa9u2bZMxxuPvTZKrp/SEhARJUs2aNd3m+/v75/gYQvp7PfV7ULduXf300086deqU202GnH5DAFCUkZADQDGSXvv90ksvqVGjRh6XSa9N9YYzZ864xvresWOHTp8+reDg4DyXkx53v379sryZkP4M+KXq2bOnlixZoocffliNGjVSyZIllZaWpk6dOnlsPZBV79XpNZ25Va9ePTVt2lQzZ87UnXfeqZkzZyowMFA9e/a8qO+R0YYNGyRlTrAyqlu3ruLi4vTdd99p/vz5mjt3rt555x09/fTTriHicpKxdcHFuLAFQ1YtGlJTUy/pc/LKW9s4nafv1bFjR1WsWFEzZ87Uddddp5kzZyo8PDzXQxaWKFHCbdlWrVqpSZMmevzxx/XGG29IOv87stls+vHHHz1+J2/+9vPC2+sXAAoTEnIAKEbSO3YLDQ31+tjknowZM0abN2/Wyy+/rEcffVSPPfaYKznIKL3mPqOtW7cqODjY1TFXSEiIUlNTc4y7Ro0aWr58uVJSUrIcGzmrRO/o0aNatGiRxo4d69ZDvKf4cqtGjRpKS0vTpk2bsrwJku7OO+/Ugw8+qP3792v27Nnq0qVLjq0VcuPjjz+WzWbTDTfckO1yJUqUUK9evdSrVy+dPXtWt956q8aPH6/Ro0fL4XDkqsl/Xmzbts2tVn379u1KS0tz1cKmf/djx465vS+9FjajvMQWERGhuLi4TNO3bNnimu9NOX1P6XxS2qdPH02fPl0TJ07U119/rXvuueeihytr2LCh+vXrp/fff18PPfSQqlWrpho1asgYo6ioqCw795P+//tv375dbdu2dU0/d+6c4uPjs735lf7erNZvuXLlctUEHwCKC54hB4BipGnTpqpRo4ZefvllVzPmjA4dOuS1z1q+fLlefvlljRgxQqNGjdLDDz+st956S7/99lumZZcuXer2fPaePXs0b948dejQQX5+fvLz81P37t01d+5cV21vVnF3795dhw8f1ltvvZVpufQat/Ra+gsTvfTk58Kauddeey13X9qDbt26yW63a9y4cZlq2C/8nN69e8tms2n48OHauXOnV8Z6f+GFFxQbG6tevXpl2VRZUqZh3QIDA1WvXj0ZY1zDsaUnUheut4v19ttvu/3/5ptvSpI6d+4s6fyNo3LlymUaAu+dd97JVFZeYrvxxhu1YsUKLV261DXt1KlTmjx5siIjI/P0HHxu5PQ9091xxx06evSo7rvvPp08efKSt/8jjzyilJQUvfrqq5LO90bv5+ensWPHZtr3jDGufaBZs2YqW7aspkyZonPnzrmWmTVrVo7N9CtVqqRGjRppxowZbttiw4YNio2N1Y033nhJ3wkAihpqyAGgkPjwww9d4zpnNHz48FyXYbfb9cEHH6hz586qX7++7rrrLl122WX6+++/9csvvyg0NFTffvttjuX8+eefmjlzZqbpNWrUUHR0tJKTk9W/f3/VqlVL48ePl3R+6K9vv/1Wd911l9avX+9WS9agQQN17NjRbdiz9Peke+GFF/TLL7+oRYsWuueee1SvXj39+++/+vPPP7Vw4UL9+++/ks7XMn/00Ud68MEHtWLFCl177bU6deqUFi5cqPvvv18xMTFyOp2qV6+ePvvsM11++eUqU6aMGjRooAYNGui6667Tiy++qJSUFF122WWKjY3Vrl27cr2OL1SzZk098cQTevbZZ3Xttdfq1ltvVVBQkFauXKnKlStrwoQJrmXLly+vTp066YsvvlCpUqXUpUuXXH/OuXPnXNskOTlZCQkJ+uabb7Ru3Tq1bds2y2fv03Xo0EHh4eFq1aqVKlasqM2bN+utt95Sly5dXM+ep3e898QTT+j2229XQECAunbtetE1nrt27dLNN9+sTp06aenSpZo5c6b69OnjNib33XffrRdeeEF33323mjVrpt9//91tPPV0eYntscce0yeffKLOnTtr2LBhKlOmjGbMmKFdu3Zp7ty5mTrfu1S5+Z6S1LhxYzVo0EBffPGF6tatqyZNmlzS59arV0833nijPvjgAz311FOqUaOGnnvuOY0ePdo1jFlISIh27dqlr776Svfee68eeughBQYG6plnntHQoUN1/fXXq2fPnoqPj9f06dNVo0aNHFsjvPTSS+rcubOio6M1aNAg17BnYWFhHsejB4BizYqu3QEAuZc+fFlWrz179uR62LN0f/31l7n11ltN2bJlTVBQkImIiDA9e/Y0ixYtyjaWnIY9Sx9aauTIkcbPz88sX77c7f2rVq0y/v7+ZvDgwa5pksyQIUPMzJkzTa1atUxQUJBp3Lix+eWXXzJ9/sGDB82QIUNM1apVTUBAgAkPDzft2rUzkydPdlvu9OnT5oknnjBRUVGu5W677TazY8cO1zJLliwxTZs2NYGBgW5DaO3du9fccsstplSpUiYsLMz06NHD7Nu3L8uhuw4dOuT22enr/cLhtz788EPTuHFjExQUZEqXLm1at25tFixYkOk7fv7550aSuffee7PaDJn079/fbTsEBwebyMhI0717dzNnzpxMw60Zk3nYs/fff99cd911rn2iRo0a5uGHHzbHjx93e9+zzz5rLrvsMmO3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TdYBAPCiXCfkK1asUGpqapbzz5w5o59//jlPH96qVSvFxcW5Tdu6daurOVxUVJTCw8O1aNEi1/zExEQtX75c0dHRefosAACQs/Rhzzxh2DMAALwr1wl5dHS0jhw54vo/NDTUbSzyY8eOqXfv3nn68JEjR2rZsmV6/vnntX37ds2ePVuTJ0/WkCFDJJ3v0XXEiBF67rnn9M0332j9+vW68847VblyZXXr1i1PnwUAAHKWPuyZJwx7BgCAd+V62DNPva3mtExOrrrqKn311VcaPXq0xo0bp6ioKL322mvq27eva5lHHnlEp06d0r333qtjx47pmmuu0fz58xnyCwCAfMCwZwAAFJw8j0OenYs5Qd9000266aabsi1z3LhxGjdu3KWEBgAAciF92LMLZRz2LDIysuADAwCgCPJqQg4AAAq39GHPPHXsxrBnAAqKMUbJycleLTMpKcnj397icDhoQYQ8y1NCvmnTJtf438YYbdmyRSdPnpQkHT582PvRAQAAn8GwZwAKSnJysjp06JBv5cfExHi9zNjYWDmdTq+Xi6ItTwl5u3bt3E7G6U3N058z444QAACFW26GPaPJOgAA3pHrhHzXrl35GQcAAPABNFkH4AscDodiY2O9WmbGZvD50bycTqdxMXKdkHMCBgCgeKPJOoCCYrPZ8qX5d3BwsNfLBC5FrschBwAARV9umqwDAADvICEHAAAuERERat68ucd5zZs3p8UcAABeREIOAABcbDabevfu7XFenz596MAVAAAvIiEHAAAuxhh98sknHufNnj2b58gBAPCii0rIz507p4ULF+r999/XiRMnJEn79u1zjUkOAAAKp4SEBK1YscLjvBUrVvAMOQAAXpSnccil8yfqTp06affu3Tpz5oxuuOEGhYSEaOLEiTpz5ozee++9/IgTAAAUgOyGPWvYsCHPkAMA4EV5riEfPny4mjVrpqNHj7oNRXDLLbdo0aJFXg0OAAAAAICiKs815H/88YeWLFmiwMBAt+mRkZH6+++/vRYYAAAoeLkZ9iwyMrJggwIAoIjKcw15WlqaUlNTM03fu3evQkJCvBIUAACwRnqTdU9osg4AgHflOSHv0KGDXnvtNdf/NptNJ0+e1JgxY3TjjTd6MzYAAAAAAIqsPCfkr7zyihYvXqx69eopOTlZffr0cTVXnzhxYn7ECAAACkhumqwDAADvyPMz5FWqVNHatWv12Wefae3atTp58qQGDRqkvn37unXyBgAACp9q1aopNDRUiYmJmeaFhYWpWrVqFkQFAEDRlKuEvEmTJlq0aJFKly6tcePG6aGHHlLfvn3Vt2/f/I4PAAAUoN27d3tMxiXp+PHj2r17N526AQDgJblqsr5582adOnVKkjR27FidPHkyX4MCAADWyK5TtyuvvJJO3QAA8KJc1ZA3atRId911l6655hoZY/Tyyy+rZMmSHpd9+umnvRogAADwDcYYq0NAMZZx/ztz7qyFkRR+Gdcfv2vAWrlKyKdPn64xY8bou+++k81m048//ih//8xvtdlsJOQAABRijEMOX5WcnOz6+/HYVyyMpGhJTk5WcHCw1WEAxVauEvLatWvr008/lSTZ7XYtWrRIFSpUyNfAAABAwYuIiFDz5s21atUqpaWluabb7XY1a9aMJusAAHhRnntZz3hyBgAARYvNZtPIkSPVr18/t+l2u10PPvigbDabRZGhuHM4HK6/n+8wSkH+gRZGU7idOXfW1cog43oFUPBylZB/88036ty5swICAvTNN99ku+zNN9/slcAAAIA1qlSpon79+umjjz6SMUY2m019+/bVZZddZnVoKMYy3gwK8g8kIfcSbrIB1spVQt6tWzcdOHBAFSpUULdu3bJczmazKTU11VuxAQAAi/Tr108//PCDDh06pHLlymWqMQcAAJcuV8OepaWluZ4ZT0tLy/JFMg4AQNHgcDg0atQoVaxYUaNGjaJZKwAA+SBXCXlu7N27V/fee6+3igMAABZr1aqV5syZo1atWlkdCgAARZLXEvIjR45o6tSp3ioOAAAAAIAizWsJOQAAAAAAyD0ScgAAAAAALEBCDgAAAACABXI17Jkk3XrrrdnOP3bs2KXGAgAyxig5Odlr5SUlJXn821scDgdjuAIAAOCi5DohDwsLy3H+nXfeeckBASjekpOT1aFDh3wpOyYmxutlxsbGyul0er1cAAAAFH25TsinTZuWn3EAAAAAAFCs5DohB4CC4HA4FBsb67XyMjaBz4/m5Q6Hw6vlAQAAoPggIQfgU2w2m9ebgAcHB3u1PAAAAMAb6GUdAAAAAAALkJADAAAAAGABEnIAAAAAACxAQg4AAAAAgAVIyAEAAAAAsAAJOQAAAAAAFiAhBwAAAADAAiTkAAAAAABYgIQc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8uUVHBzslTKnT5+unj17KjExUcuXL/dKmRcjJSVFTqfTJ473+eWJJ55Qr169dNVVV+nHH3/Uhg0b9Morr2jt2rX6+OOPc3x/+nlo586dmjRpkt5//32NGTNGZ8+e9aljxY4dO1SpUiVdffXVOcbk7XP+2bNnL/q9hVlW55fcbIv0dRYeHl7shm+6FDt37lSzZs20bds2ffLJJ9q+fbvee+89LVq0SNHR0TneZCtIvnxsdTgcmjhxoo4ePerVcvPrWDB37lzVr19fderUsbRFSUpKinXXzgaZ9O/f38TExJgGDRqYmTNnuqbPmjXLNGzY0MTExJj+/fu7prdu3doMHz7c9f/BgwfNTTfdZBwOh4mMjDQzZ840ERERZtKkSa5ltm7daq699loTFBRk6tata2JjY40k89VXXxljjNm1a5eRZP766y/Xe9avX286depkSpQoYSpUqGD69etnDh06lOX3+OWXX4wkc/To0SyXWbFihWnfvr0pW7asCQ0NNdddd51ZvXq1a35aWpoZM2aMqVq1qgkMDDSVKlUyQ4cOdX1vSW6v3Epfx1nx9P2PHj1qJJlffvnF7fv98MMPpkmTJiYgIMD88ssvJjk52QwdOtSUL1/eBAUFmVatWpkVK1ZkWi/fffedueKKK0xQUJBp0aKFWb9+vVsMf/zxh7nmmmuMw+EwVapUMUOHDjUnT550zf/oo49M06ZNTcmSJU3FihVN7969zcGDBzN9zsKFC03Tpk2N0+k00dHRZsuWLXn63uku3M8kmSlTpphu3boZp9NpatasaebNm5fp8zNu/zlz5ph69eqZwMBAExERYV5++WW3z4iIiDDjx483d911lylZsqSpWrWqef/997OM10onTpwwJUuWNFu2bDG9evUy48ePd837999/TZ8+fUy5cuWMw+EwNWvWNB9++KExJvM6PnfunBk4cKCJjIw0DofDXH755ea1116z4ivlWfpv4tdff812uYSEBHPzzTebEiVKmJCQENOjRw9z4MAB13xPv8fhw4eb1q1bu+Zf+FvftWvXRe3jnTt3Npdddpl5//33TcuWLc2xY8dMcHCw2b17t9u+2rt3b1OtWjUTHBxsbDab8fPzM4MHDzYpKSnmoYceMg6HwwQEBJi7777bREREmNDQUNOrVy+zadMm06NHDxMQEOAx5o4dOxpJ5s477zT+/v6u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DofD3HbbbW4JefoNqyuvvNJs377dtU6joqLM/PnzzaxZs4wkY7PZzMsvv2zWrVtnIiIiTGBgoFm6dKnZtWuXeeihh4yfn59p1qyZ+eCDD4wkU7t2bdOsWTPXsfn33383oaGhZvr06WbHjh1m9uzZxmazmauuusps3rzZfPXVV6ZEiRLmzjvvNLt27TLz5s0zZcuWNSVKlDD79+83//zzj5k2bZoJCAgw7du3NytXrjSrV6821apV81pCHhoaal5++WWzfft2s3379lyfP0JCQsyECRNMXFyc63cRGxvrWqZ9+/ama9euZuXKlWbr1q1m1KhRpmzZsq514yuyOr8cO3bMjBs3zlSpUsW1LYw5v15LlixpHn74YbNlyxbXOTPjdd2JEydM9erVzbXXXmv++OMPs23bNvPZZ5+5krys9tOEhISCXwEWyHh+8OSee+4xpUuXNmlpaaZnz56matWq5ssvvzQ7duwwCxcuNJ9++qkxJnfXy3PmzDFz584127ZtM3/99Zfp2rWrueKKK0xqaqoxxv04/d1335m4uDhz2223mYiICFdCd+Gx1Ve2X/r5/MsvvzQOh8Ps2bPHGJM5Ic/tb/rCY8GKFStcN1j379/v+u3279/fhIaGmv/85z9m8+bN5ttvvzXBwcGunCEr27dvN0FBQebff/81R44cMQ6Hw8THx7stI8lcdtll5rPPPjNxcXGmW7duJjIy0lx//fVu59FOnTq53nPhcTY2NtZERkaaZ555xq3cChUqmA8//NDs2LHDJCQkZLp2/uuvv0xQUJAZPHiwWbNmjdmwYYN58803XTd4ctqXcouE3IP0nfmff/4xQUFBJj4+3sTHxxuHw2EOHTqUbUIeFxdnJLnVyG7evNlIciXkP/30k/H39zd///23a5kff/wx24T82WefNR06dHCLc8+ePUaSiYuL8/g90neqEiVKuL3q1auX5XdPTU01ISEh5ttvvzXGGPPKK6+Yyy+/PMsLngtr/nOrf//+xs/PL1Ns6Xeh85KQf/31165lTp48aQICAsysWbNc086ePWsqV65sXnzxRbf3pR+8jTl/InA6na4kbNCgQebee+91i/mPP/4wdrvdJCUlefxOK1euNJLMiRMn3D5n4cKFrmW+//57IynLMvKakD/55JNu312S+fHHH90+P/2g0qdPn0x3Hh9++GG3/SEiIsL0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eekHiaykXwx40r9/fx05ckSvv/66IiIiFBQUpOjoaFfHDVWrVlVcXJwWLlyoBQsW6P7779dLL72k3377TQEBAZf0nUqUKKGaNWt6nGe3n79XlPHAnJKSkmU53nby5Endd999GjZsWKZ51apV06lTp9SxY0d17NhRs2bNUvny5bV792517NgxU6cXGddTeicRFx5o0oWGhkqSjh8/nmnesWPHMvX6eOE2sNlsWZadW/lRprdNnTpV586dc7upZYxRUFCQ3nrrLXXu3FkJCQn64YcftGDBArVr105DhgzRyy+/nKmsTz/9VA899JBeeeUVRUdHKyQkRC+99JKlnXHllcPh0A033KAbbrhBTz31lO6++26NGTPGbTSI7Njt9kwXQVn93jzJ7T5eq1Yt2Ww2LVy4UCdPnnTrDCk1NVUffvih2rVrp5MnT8rpdCo6Olrvvfeea5m+ffu6DYMVEBDgtn+ePXtWgYGBrt5f+/btq7p16+rJJ59U+fLl3WK58Lhx9OhRrV+/XlOmTNGKFSs0Y8YMVahQwWMnNi+99JJef/11vfbaa7riiitUokQJjRgxQrt27VJycrJbYmmMUVpamrZu3arLL78823V24bT073Xy5ElJ0pQpUzIlrRkvfjx9rws5nc4s5+XluHYx78nLsTA3Lr/8cv33v/9VSkpKtuejhx56SAsWLNDLL7+smjVryul06rbbbtPZs2dd56HAwED169dP06ZN09SpUzVo0CCdOnVKkvTGG2+oTZs2Wr58ufr166eFCxcqKipKktS5c2fVr19fNWvW1L59+/T555+7Xcx6cvLkSY0dO1a33nqrJOn+++9XSEiIJk6cKIfDofj4eA0dOlSS9P7776tevXoaM2aMPv30U509e9bV+aCnY7WU/Tk/t7/1/DqvVqpUSb/++mumeb40fFRO55esXMpvT8p+Py0OatasKZvNps2bN+uWW27JNH/z5s0qXbp0jusxN9fLXbt2VUREhKZMmaLKlSsrLS1NDRo0uKRjli9uv+uuu04dO3bU6NGjc309cKG8HAvyev34008/6e+//1avXr3cpqempmrRokW64YYbPJad1TlTktt5M+NxNiOHw+H6+1J/t7ndl3JCDXkOOnXqpLNnzyolJUUdO3bMcfk6dero3LlzWr16tWtaXFyc23h2devW1Z49e7R//37XtGXLlmVbbpMmTbRx40ZFRkaqZs2abq9LOXEuXrxYw4YN04033qj69esrKChIhw8fdlvG6XSqa9eueuONN/Trr79q6dKlWr9+vaTzPXnndPFxMdIvnjOuo9wMsVCjRg0FBga6DfmUkpKilStXql69em7LZlznR48e1datW1W3bl1J59f3pk2bMq3r9Au3LVu26MiRI3rhhRd07bXXqk6dOl6pRU4f9iHj/iNJiYmJ2r59u9sFfV7VrVs301BYixcv1uWXX57pot6XnTt3Th999JFeeeUVt1qgtWvXqnLlyq6e+suXL6/+/ftr5syZeu211zR58mSP5S1evFhXX3217r//fjVu3Fg1a9b0qdqai1GvXj1XMpF+vNmzZ49r/qZNm3Ts2DHXb6J8+fJuvzUp8+/NG7/1MmXKqHHjxjp58qSWLFnitv0++eQTzZ07V8eOHVOTJk2UlJQku93u9ttzOp3ZnhyrVKmic+fOqUKFCqpZs6bCwsIUEhLi+js7Z86cUfPmzXXLLbeoU6dOOnDggHbu3Olx2cWLFysmJkb9+vXTlVdeqerVq2vr1q1KSEjQqFGjMu2X1157rT788MOLXm8VK1ZU5cqVtXPnzkzHo/TEMLcaNmyY5fByF3Nc89axsG7dupluguV0XuzTp49Onjypd955x+P89PPu4sWLNWDAAN1yyy264oorFB4ervj4+EzL2+12Pf7443ryySeVlJSkWrVqSTo/TF/NmjV12WWXuf5Pb3Fy9OhR7dy5U71799bMmTPVu3dvGWO0atUqBQYGSjpfK3fs2DG380tcXJxrG1511VXauHGjatSoIbvdrtWrVys1NVUhISG6+eabdfnll3u8SXsxLvytp6amasOGDTm+L7fnjwu32bJly9y+94EDB+Tv759pP86p9WFBye355WI0bNhQa9asybKn8Nzup0VV2bJldcMNN+idd95xG+FIOv+bmzVrlnr16qUrrrhCaWlp+u233zyWk9P18pEjRxQXF6cnn3xS7dq1U926db3SG7mvbr8XXnhB3377rZYuXeo2/WKvCdOPa9649p86dapuv/32TK1lb7/99hxbpOTkwuNsxld6pV9uZHfO9Oa+REKeAz8/P23evFmbNm3KVdJSu3ZtderUSffdd5+WL1+u1atX6+6773a7iGzfvr0uv/xy9e/fX2vXrtUff/yhJ554IttyhwwZon///Ve9e/fWypUrtWPHDv3000+66667cvxRpDeFy/hKvyNeq1Ytffzxx9q8ebOWL1+uvn37usU6ffp0TZ06VRs2bNDOnTs1c+ZMOZ1ORURESDrfZPT333/X33//nSmRz8mZM2cyxZVehtPpVMuWLfXCCy9o8+bN+u233/Tkk0/mWGaJEiU0ePBgPfzww5o/f742bdqke+65R6dPn9agQYPclh03bpwWLVqkDRs2aMCAASpXrpy6desmSXr00Ue1ZMkSPfDAA1qzZo22bdumefPmuVpLVKtWTYGBgXrzzTe1c+dOffPNN14bi/7BBx/U888/r1mzZmnHjh1asWKF+vbtq/Lly3u805dbo0aN0qJFi/Tss89q69atmjFjht566y099NBDXom7oHz33Xc6evSoBg0apAYNGri9unfvrqlTp+rpp5/WvHnztH37dm3cuFHfffed66LwQrVq1dKqVav0008/aevWrXrqqae0cuXKAv5WF+fIkSO6/vrrNXPmTK1bt067du3SF198oRdffFExMTGSzh9vrrjiCvXt21d//vmnVqxYoTvvvFOtW7d2NdW6/vrrtWrVKn300Ufatm2bxowZk+kiPTIyUsuXL1d8fLwOHz580TWbZcqUUVBQkAYNGqS4uDgFBQXJz89PBw8e1Llz5zRr1iy1b99e5cuX1/LlyxUbG6v4+HgtWbJEu3bt0sGDB7Msu2nTprLb7YqJidEff/yhsmXLauHChRowYIDWrVuXbcz+/v5at26d1qxZo1KlSqlMmTI6deqUdu/erV27dunHH390XSTWqlVLCxYs0JIlS7R582bdd9992rdvn44fP6677747037Zu3dvzZgx45Ie9xk7dqwmTJigN954Q1u3btX69es1bdo0vfrqq3kqZ8yYMfrkk080ZswYbd68WevXr3fVJF3Mcc1bx8Lhw4frww8/1LRp07R161aNGTNGGzduzPY9LVq00COPPKJRo0bpkUce0dKlS5WQkKBFixapR48emjFjhqTz2+vLL790JVZ9+vTJcl/o0aOH/Pz89Pbbb6tkyZKSpFdeeUUzZszQ33//7Yr10Ucf1YYNG9SyZUsFBwerQYMG2rhxo9auXSubzaahQ4dq165dCgoK0siRI9WkSRPVrl1bkvT000/ro48+0tixY7Vx40bdcMMNio+P11VXXaUtW7Zoz549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vFJz5sxxe/8333yjWrVqyeFwqG3btpoxY4ZsNpuOHTsmyXOT9XfffVc1atRQYGCgateurY8//thtvs1m0wcffKBbbrlFwcHBqlWrlr755pt8WwcAABQmJOQAABRBGzZs0JIlSxQYGChJmjBhgj766CO999572rhxo0aOHKl+/frpt99+kyTt2rVLt912m7p166a1a9fqvvvu0xNPPJHtZ3z11VcaPny4Ro0apQ0bNui+++7TXXfdpV9++cVtubFjx6pnz55at26dbrzxRvXt21f//vtv/nxxAAAKEZsxxlgdBAAAuDQDBgzQzJkz5XA4dO7cOZ05c0Z2u12ff/65brrpJpUpU0YLFy5UdHS06z133323Tp8+rdmzZ+uxxx7T999/r/Xr17vmP/nkkxo/fryOHj2qUqVKafr06RoxYoSrxrxVq1aqX7++Jk+e7HpPz549derUKX3//feSzteQP/nkk3r22WclSadOnVLJkiX1448/qlOnTgWwZgAA8F08Qw4AQBHRtm1bvfvuuzp16pQmTZokf39/de/eXRs3btTp06d1ww03uC1/9uxZNW7cWJIUFxenq666ym1+8+bNs/28zZs3695773Wb1qpVK73++utu0xo2bOj6u0SJEgoNDdU///yT5+8HAEBRQ0IOAEARUaJECdWsWVOS9OGHH+rKK6/U1KlT1aBBA0nS999/r8suu8ztPUFBQfkeV0BAgNv/NptNaWlp+f65AAD4OhJyAACKILvdrscff1wPPvigtm7dqqCgIO3evVutW7f2uHzt2rX1ww8/uE1buXJltp9Rt25dLV68WP3793dNW7x4serVq3fpXwAAgGKAhBwAgCKqR48eevjhh/X+++/roYce0siRI5WWlqZrrrlGx48f1+LFixUaGqr+/fvrvvvu06uvvqpHH31UgwYN0po1azR9+nRJ52u0PXn44YfVs2dPNW7cWO3bt9e3336rL7/8UgsXLizAbwkAQOFFQg4AQBHl7++vBx54QC+++KJ27dql8uXLa8KECdq5c6dKlSqlJk2a6PHHH5ckRUVFac6cORo1apRef/11RUdH64knntDgwYOzbNberVs3vf7663r55Zc1fPhwRUVFadq0aWrTpk0BfksAAAovelkHAAAejR8/Xu+995727NljdSgAABRJ1JADAABJ0jvvvKOrrrpKZcuW1eLFi/XSSy/pgQcesDosAACKLBJyAAAgSdq2bZuee+45/fvvv6pWrZpGjRql0aNHWx0WAABFFk3WAQAAAACwgN3qAAAAAAAAKI5IyAEAAAAAsAAJOQAAAAAAFiAhBwAAAADAAiTkAAAAAABYgIQcAAAAAAALkJADAAAAAGABEnIAAAAAACzwfwQFbT7220RfAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.boxplot(x='Region', y='Life_expectancy', data=data, palette='muted')\n",
    "plt.title(\"Life Expectancy Distribution by Region\")\n",
    "plt.xlabel(\"Region\")\n",
    "plt.ylabel(\"Life Expectancy\")\n",
    "# plt.xticks(rotation=45)\n",
    "plt.savefig('Life_exp_dist_by_region.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b418943",
   "metadata": {
    "papermill": {
     "duration": 0.006076,
     "end_time": "2025-03-24T20:48:02.981517",
     "exception": false,
     "start_time": "2025-03-24T20:48:02.975441",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3065197,
     "sourceId": 5266275,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.147615,
   "end_time": "2025-03-24T20:48:03.709435",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-03-24T20:47:55.561820",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
